{"version":3,"file":"index.mjs","sources":["../lib/node_version.js","../lib/has_from.js","../lib/main.js","../lib/polyfill.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar NODE_VERSION = require( '@stdlib/process-node-version' );\n\n\n// MAIN //\n\nvar MAJOR = ( NODE_VERSION ) ? parseInt( NODE_VERSION.split( '.' )[ 0 ], 10 ) : -1;\n\n\n// EXPORTS //\n\nmodule.exports = MAJOR;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert-is-function' );\nvar Buffer = require( '@stdlib/buffer-ctor' );\nvar version = require( './node_version.js' );\n\n\n// MAIN //\n\nvar bool = isFunction( Buffer.from ) && version >= 5;\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayBuffer = require( '@stdlib/assert-is-arraybuffer' );\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar Buffer = require( '@stdlib/buffer-ctor' );\nvar format = require( '@stdlib/string-format' );\nvar version = require( './node_version.js' );\n\n\n// MAIN //\n\n/**\n* Allocates a buffer from an `ArrayBuffer`.\n*\n* ## Notes\n*\n* The behavior of this function varies across Node.js versions due to changes in the underlying Node.js APIs:\n*\n* -   `<6.0.0`: if provided an empty ArrayBuffer, the function returns an empty Buffer which is **not** an ArrayBuffer view.\n* -   otherwise, the function returns a view of an ArrayBuffer without copying the underlying memory.\n*\n*\n* @param {ArrayBuffer} buf - ArrayBuffer instance\n* @param {NonNegativeInteger} [byteOffset=0] - index specifying the location of the first buffer byte\n* @param {NonNegativeInteger} [length=buf.byteLength] - number of buffer bytes\n* @throws {TypeError} first argument must be an ArrayBuffer\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {RangeError} second argument must not exceed number of bytes in input ArrayBuffer\n* @throws {TypeError} last argument must be a nonnegative integer\n* @throws {RangeError} last argument must not exceed number of bytes in input ArrayBuffer\n* @returns {Buffer} new `Buffer` instance\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array-buffer' );\n* var ab = new ArrayBuffer( 10 );\n*\n* var buf = fromArrayBuffer( ab );\n* // returns <Buffer>\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array-buffer' );\n* var ab = new ArrayBuffer( 10 );\n*\n* var buf = fromArrayBuffer( ab, 2, 4 );\n* // returns <Buffer>\n*/\nfunction fromArrayBuffer( buf, byteOffset, length ) {\n\tvar offset;\n\tvar len;\n\tif ( !isArrayBuffer( buf ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an ArrayBuffer. Value: `%s`.', buf ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNonNegativeInteger( byteOffset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', byteOffset ) );\n\t\t}\n\t\tif ( byteOffset > buf.byteLength ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Second argument must not exceed the number of bytes in the input ArrayBuffer. Value: `%s`.', byteOffset ) );\n\t\t}\n\t\toffset = byteOffset;\n\t\tif ( arguments.length > 2 ) {\n\t\t\tif ( !isNonNegativeInteger( length ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a nonnegative integer. Value: `%s`.', length ) );\n\t\t\t}\n\t\t\tif ( length > buf.byteLength ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. Last argument must not exceed the number of bytes in the input ArrayBuffer. Value: `%s`.', length ) );\n\t\t\t}\n\t\t\tlen = length;\n\t\t} else {\n\t\t\tlen = buf.byteLength - offset;\n\t\t}\n\t} else {\n\t\toffset = 0;\n\t\tlen = buf.byteLength;\n\t}\n\t// Address Node v5.x where providing an empty ArrayBuffer throws an error:\n\tif ( len === 0 && version < 6 ) {\n\t\treturn Buffer.from( [] );\n\t}\n\treturn Buffer.from( buf, offset, len );\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromArrayBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isArrayBuffer = require( '@stdlib/assert-is-arraybuffer' );\nvar isNonNegativeInteger = require( '@stdlib/assert-is-nonnegative-integer' ).isPrimitive;\nvar Buffer = require( '@stdlib/buffer-ctor' );\nvar Uint8Array = require( '@stdlib/array-uint8' );\nvar fromArray = require( '@stdlib/buffer-from-array' );\nvar format = require( '@stdlib/string-format' );\nvar version = require( './node_version.js' );\n\n\n// MAIN //\n\n/**\n* Allocates a buffer from an `ArrayBuffer`.\n*\n* ## Notes\n*\n* The behavior of this function varies across Node.js versions due to changes in the underlying Node.js APIs:\n*\n* -   `<3.0.0`: the function copies ArrayBuffer bytes to a new Buffer instance.\n* -   `>=3.0.0`: if provided a byte offset, the function copies `ArrayBuffer` bytes to a new `Buffer` instance; otherwise, the function returns a view of an `ArrayBuffer` without copying the underlying memory.\n* -   `<6.0.0`: if provided an empty ArrayBuffer, the function returns an empty Buffer which is **not** an ArrayBuffer view.\n*\n*\n* @param {ArrayBuffer} buf - ArrayBuffer instance\n* @param {NonNegativeInteger} [byteOffset=0] - index specifying the location of the first buffer byte\n* @param {NonNegativeInteger} [length=buf.byteLength] - number of buffer bytes\n* @throws {TypeError} first argument must be an ArrayBuffer\n* @throws {TypeError} second argument must be a nonnegative integer\n* @throws {RangeError} second argument must not exceed number of bytes in input ArrayBuffer\n* @throws {TypeError} last argument must be a nonnegative integer\n* @throws {RangeError} last argument must not exceed number of bytes in input ArrayBuffer\n* @returns {Buffer} new `Buffer` instance\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array-buffer' );\n* var ab = new ArrayBuffer( 10 );\n*\n* var buf = fromArrayBuffer( ab );\n* // returns <Buffer>\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array-buffer' );\n* var ab = new ArrayBuffer( 10 );\n*\n* var buf = fromArrayBuffer( ab, 2, 4 );\n* // returns <Buffer>\n*/\nfunction fromArrayBuffer( buf, byteOffset, length ) {\n\tvar len;\n\tif ( !isArrayBuffer( buf ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be an ArrayBuffer. Value: `%s`.', buf ) );\n\t}\n\tif ( arguments.length > 1 ) {\n\t\tif ( !isNonNegativeInteger( byteOffset ) ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Second argument must be a nonnegative integer. Value: `%s`.', byteOffset ) );\n\t\t}\n\t\tif ( byteOffset > buf.byteLength ) {\n\t\t\tthrow new RangeError( format( 'invalid argument. Second argument must not exceed the number of bytes in the input ArrayBuffer. Value: `%s`.', byteOffset ) );\n\t\t}\n\t\tif ( arguments.length > 2 ) {\n\t\t\tif ( !isNonNegativeInteger( length ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Last argument must be a nonnegative integer. Value: `%s`.', length ) );\n\t\t\t}\n\t\t\tif ( length > buf.byteLength ) {\n\t\t\t\tthrow new RangeError( format( 'invalid argument. Last argument must not exceed the number of bytes in the input ArrayBuffer. Value: `%s`.', length ) );\n\t\t\t}\n\t\t\tlen = length;\n\t\t} else {\n\t\t\tlen = buf.byteLength - byteOffset;\n\t\t}\n\t\treturn fromArray( new Uint8Array( buf, byteOffset, len ) );\n\t}\n\tif ( version < 3 ) {\n\t\treturn fromArray( new Uint8Array( buf ) );\n\t}\n\t// Address Node <= v5.x where providing an empty ArrayBuffer throws an error:\n\tif ( buf.byteLength === 0 ) {\n\t\treturn new Buffer( [] ); // eslint-disable-line no-buffer-constructor\n\t}\n\treturn new Buffer( buf ); // eslint-disable-line no-buffer-constructor\n}\n\n\n// EXPORTS //\n\nmodule.exports = fromArrayBuffer;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Allocate a buffer from an `ArrayBuffer`.\n*\n* @module @stdlib/buffer-from-arraybuffer\n*\n* @example\n* var ArrayBuffer = require( '@stdlib/array-buffer' );\n* var arraybuffer2buffer = require( '@stdlib/buffer-from-arraybuffer' );\n*\n* var ab = new ArrayBuffer( 10 );\n* var buf = arraybuffer2buffer( ab );\n* // returns <Buffer>\n*/\n\n// MODULES //\n\nvar hasFrom = require( './has_from.js' );\nvar main = require( './main.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar arraybuffer2buffer;\nif ( hasFrom ) {\n\tarraybuffer2buffer = main;\n} else {\n\tarraybuffer2buffer = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = arraybuffer2buffer;\n"],"names":["node_version","require$$0","parseInt","split","version","require$$2","has_from","require$$1","from","isArrayBuffer","isNonNegativeInteger","isPrimitive","Buffer","format","require$$3","require$$4","main","buf","byteOffset","length","offset","len","TypeError","arguments","byteLength","RangeError","Uint8Array","fromArray","require$$5","require$$6","lib"],"mappings":";;4qBAsBA,IAUAA,EAVmBC,EAKYC,SALZD,EAKmCE,MAAO,KAAO,GAAK,KAAQ,ECH7EC,EAAUC,EAUdC,EAZiBL,EACJM,EAMiBC,OAAUJ,GAAW,ECP/CK,EAAgBR,EAChBS,EAAuBH,EAAmDI,YAC1EC,EAASP,EACTQ,EAASC,EACTV,EAAUW,EA+Ed,IAAAC,EAvCA,SAA0BC,EAAKC,EAAYC,GAC1C,IAAIC,EACAC,EACJ,IAAMZ,EAAeQ,GACpB,MAAM,IAAIK,UAAWT,EAAQ,wEAAyEI,IAEvG,GAAKM,UAAUJ,OAAS,EAAI,CAC3B,IAAMT,EAAsBQ,GAC3B,MAAM,IAAII,UAAWT,EAAQ,gFAAiFK,IAE/G,GAAKA,EAAaD,EAAIO,WACrB,MAAM,IAAIC,WAAYZ,EAAQ,+GAAgHK,IAG/I,GADAE,EAASF,EACJK,UAAUJ,OAAS,EAAI,CAC3B,IAAMT,EAAsBS,GAC3B,MAAM,IAAIG,UAAWT,EAAQ,8EAA+EM,IAE7G,GAAKA,EAASF,EAAIO,WACjB,MAAM,IAAIC,WAAYZ,EAAQ,6GAA8GM,IAE7IE,EAAMF,OAENE,EAAMJ,EAAIO,WAAaJ,OAGxBA,EAAS,EACTC,EAAMJ,EAAIO,WAGX,OAAa,IAARH,GAAajB,EAAU,EACpBQ,EAAOJ,KAAM,IAEdI,EAAOJ,KAAMS,EAAKG,EAAQC,IC7E9BZ,EAAgBR,EAChBS,EAAuBH,EAAmDI,YAC1EC,EAASP,EACTqB,EAAaZ,EACba,EAAYZ,EACZF,EAASe,EACTxB,EAAUyB,ECyBd,IAAAC,EAjBc7B,EACHM,EDgCX,SAA0BU,EAAKC,EAAYC,GAC1C,IAAIE,EACJ,IAAMZ,EAAeQ,GACpB,MAAM,IAAIK,UAAWT,EAAQ,wEAAyEI,IAEvG,GAAKM,UAAUJ,OAAS,EAAI,CAC3B,IAAMT,EAAsBQ,GAC3B,MAAM,IAAII,UAAWT,EAAQ,gFAAiFK,IAE/G,GAAKA,EAAaD,EAAIO,WACrB,MAAM,IAAIC,WAAYZ,EAAQ,+GAAgHK,IAE/I,GAAKK,UAAUJ,OAAS,EAAI,CAC3B,IAAMT,EAAsBS,GAC3B,MAAM,IAAIG,UAAWT,EAAQ,8EAA+EM,IAE7G,GAAKA,EAASF,EAAIO,WACjB,MAAM,IAAIC,WAAYZ,EAAQ,6GAA8GM,IAE7IE,EAAMF,OAENE,EAAMJ,EAAIO,WAAaN,EAExB,OAAOS,EAAW,IAAID,EAAYT,EAAKC,EAAYG,IAEpD,OAAKjB,EAAU,EACPuB,EAAW,IAAID,EAAYT,IAGX,IAAnBA,EAAIO,WACD,IAAIZ,EAAQ,IAEb,IAAIA,EAAQK"}